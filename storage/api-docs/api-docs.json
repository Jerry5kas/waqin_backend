{
    "openapi": "3.0.0",
    "info": {
        "title": "Waqin Api Documentation",
        "description": "API documentation for Waqin project",
        "version": "1.0.0"
    },
    "paths": {
        "/api/import-customers": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Import customers for a specific tenant",
                "operationId": "3f24a45733a0c93be9b7ec2431d25476",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "customers"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "customers": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "phone_account_id": {
                                                    "type": "string",
                                                    "example": "12345"
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.com"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "Regular"
                                                },
                                                "another_mobile": {
                                                    "type": "string",
                                                    "example": "9876543211"
                                                },
                                                "company": {
                                                    "type": "string",
                                                    "example": "XYZ Pvt Ltd"
                                                },
                                                "gst": {
                                                    "type": "string",
                                                    "example": "22AAAAA0000A1Z5"
                                                },
                                                "profile_pic": {
                                                    "type": "string",
                                                    "example": "profile.jpg"
                                                },
                                                "location": {
                                                    "type": "string",
                                                    "example": "New York"
                                                },
                                                "group": {
                                                    "type": "string",
                                                    "example": "Premium"
                                                },
                                                "dob": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-01"
                                                },
                                                "anniversary": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2015-06-15"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "contact_status": {
                                                    "type": "string",
                                                    "example": "Active"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customers imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customers imported successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create customers table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create customers table."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/updateProfile": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Update tenant profile",
                "operationId": "dfba28f94c55550027e45a4f167644dc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "image": {
                                        "description": "Profile picture",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully."
                                        },
                                        "sub_categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "sub_category_name": {
                                                        "type": "string",
                                                        "example": "Retail"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The email address is already in use."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/update-customer": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Update a customer's details",
                "operationId": "cc3b390deaa47ceb9d3328f641bea8fa",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "id"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "profile_pic": {
                                        "description": "Customer profile picture (JPEG, PNG, GIF, SVG)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Customer updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No data provided for update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No data provided for update."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found or no changes detected",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No customer found with the provided ID, or no changes detected."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email must be a valid email address."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/import-callhistory": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Import call history for a tenant",
                "operationId": "bb11da8303d83ee9c635e9f80c69130d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "call_history"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "call_history": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "number",
                                                "call_type",
                                                "duration",
                                                "timestamp"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "number": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "formatted_number": {
                                                    "type": "string",
                                                    "example": "(123) 456-7890"
                                                },
                                                "call_type": {
                                                    "type": "string",
                                                    "example": "incoming"
                                                },
                                                "duration": {
                                                    "type": "integer",
                                                    "example": 120
                                                },
                                                "timestamp": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-04-07T10:30:00Z"
                                                },
                                                "sim_display_name": {
                                                    "type": "string",
                                                    "example": "SIM 1"
                                                },
                                                "phone_account_id": {
                                                    "type": "string",
                                                    "example": "account_123"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Call history imported successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Call history imported successfully with customer IDs."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create call history table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create call history table."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get-call-history": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve call history for a given phone number",
                "operationId": "1943919a82c6215a4abcfe0ddc4f7e47",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "number"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Call history retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "call_history": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "customer_id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "number": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "call_type": {
                                                        "type": "string",
                                                        "example": "incoming"
                                                    },
                                                    "duration": {
                                                        "type": "integer",
                                                        "example": 120
                                                    },
                                                    "timestamp": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-04-07T10:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No call history found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No call history found for the provided phone number."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The number field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error occurred while fetching call history."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/saveCustomerDetails": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Save customer details for a tenant",
                "operationId": "98369cb29fb352680005ef5ee4ca3ed8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "business_id",
                                    "status_id",
                                    "mobile",
                                    "phone_account_id",
                                    "fields"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "business_id": {
                                        "type": "integer",
                                        "example": 101
                                    },
                                    "status_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "phone_account_id": {
                                        "type": "string",
                                        "example": "acc_456"
                                    },
                                    "fields": {
                                        "type": "object",
                                        "example": {
                                            "first_name": "John",
                                            "last_name": "Doe",
                                            "email": "john@example.com"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer details saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customers Details Saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create customers details table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create customers details table."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getServiceOrProductCategory": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get service or product category based on type and business ID",
                "operationId": "2fb86b11f3fcc7f998f5ab0c50a4c948",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Type of category (sales or service)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "sales",
                                "service"
                            ]
                        }
                    },
                    {
                        "name": "business_id",
                        "in": "query",
                        "description": "Business ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product_category": {
                                                        "type": "string",
                                                        "example": "Electronics"
                                                    },
                                                    "service": {
                                                        "type": "string",
                                                        "example": "Repair"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No data available for the given input."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addCatalog": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add a new catalog entry",
                "operationId": "48dcde07d2b7baa10a77179cca7d4d0f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "form_id",
                                    "tenant_schema"
                                ],
                                "properties": {
                                    "form_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Data saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No form available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No form available."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getCatalog": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve catalog data",
                "operationId": "80354e80ad4533b585465679cfdfe056",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_123"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "product_catalog"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catalog data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The catalog does not exist or no data found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The catalog does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editCatalog": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit a catalog entry",
                "operationId": "568cf3d540f35c5eea5a2dda92fb1569",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "catalog_id",
                                    "catalog_type"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "catalog_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "catalog_type": {
                                        "type": "string",
                                        "enum": [
                                            "product",
                                            "service"
                                        ],
                                        "example": "product"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Catalog Name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated catalog description"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catalog updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Catalog not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteCatalog": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Delete catalog entries",
                "operationId": "7870e1714de3a04f72a77ab8cc36e775",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "catalog_ids",
                                    "catalog_type"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "catalog_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "catalog_type": {
                                        "type": "string",
                                        "enum": [
                                            "product",
                                            "service"
                                        ],
                                        "example": "product"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catalogs deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalogs deleted successfully."
                                        },
                                        "deleted_catalogs": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Catalog(s) not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog(s) not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addEmployee": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add an employee to the tenant database",
                "operationId": "58f90fc662d3ec6d01921ac98e6c43d3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "employee_type"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "employee_type": {
                                        "type": "string",
                                        "example": "Operational user"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Manager"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant not found in master database."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: [error details]"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editEmployee": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit employee details",
                "operationId": "12bdadf675095ce58540e41a969bd3fc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "image": {
                                        "description": "Employee profile image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee data updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee data updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema and employee ID are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found or table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteEmployee": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Soft delete an employee",
                "operationId": "80f64ac731d71942097ae35211925748",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee deleted successfully (soft delete).",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee deleted successfully (soft delete)."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema and employee ID are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found or table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getEmployees": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve active employees",
                "operationId": "2aa05314ce2072f07a9d2e571bb0b973",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of active employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employees": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "full_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "designation": {
                                                        "type": "string",
                                                        "example": "Manager"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No employees found or table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employees table does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/saveAppointment": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Save an appointment form submission",
                "operationId": "a48b85f0bc24e2059c96491bc747e0a8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "form_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "form_data": {
                                        "type": "object",
                                        "example": {
                                            "patient_name": "John Doe",
                                            "appointment_date": "2025-04-10"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema, form ID, and form data are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found in the master database."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editAppointment": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit an existing appointment",
                "operationId": "5733cbcfba1579dc493184521562f6c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "appointment_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "form_data": {
                                        "type": "object",
                                        "example": {
                                            "date": "2025-04-15",
                                            "status": "confirmed"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema, appointment ID, and form data are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update appointment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteAppointment": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Mark an appointment as deleted",
                "operationId": "360cfd5da88e953d3fcccc636e050c40",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "appointment_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Appointment marked as deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment marked as deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema and appointment ID are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointment not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete appointment."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getAppointments": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve today's appointments",
                "operationId": "84e0ab1db6454fbf94f99217a6a8b187",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of today's appointments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "appointments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant schema is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointments table not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Appointments table does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getAppointmentsByDate": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve appointments by a specific date",
                "operationId": "12e50a42fc3a38ea6a8912ec3c2a662c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "25 Dec 2024"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of appointments for the given date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "appointments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or incorrect date format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid date format. Please use '25 Dec 2024' format."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Appointments table not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No appointments found for the selected date."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenant/marketing": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve marketing items for a business",
                "operationId": "1ad9535680ce3c51d6d2c4b4cd127277",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "business_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "List of marketing items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Business ID and tenant schema are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/addMarketingItem": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add a new marketing item",
                "operationId": "046abddc3832c015b0741081b9029e44",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "title"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Special Offer"
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Limited Time Only",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Get 50% off on all products.",
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "offer_list": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Buy 1 Get 1",
                                            "20% Cashback"
                                        ],
                                        "nullable": true
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "A great deal you can't miss!",
                                        "nullable": true
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "New York",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Marketing item added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing item added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editMarketingItem": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit an existing marketing item",
                "operationId": "833cb227c4b646ec5fca839eabdacea3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "id",
                                    "tenant_schema"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Special Offer",
                                        "nullable": true
                                    },
                                    "subtitle": {
                                        "type": "string",
                                        "example": "Updated Limited Time",
                                        "nullable": true
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Get 60% off on all products.",
                                        "nullable": true
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "nullable": true
                                    },
                                    "offer_list": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "Buy 2 Get 1",
                                            "30% Cashback"
                                        ],
                                        "nullable": true
                                    },
                                    "summary": {
                                        "type": "string",
                                        "example": "An even better deal!",
                                        "nullable": true
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Los Angeles",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Marketing item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing item updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Marketing item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing item not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteMarketingItem": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Soft delete a marketing item",
                "operationId": "63523ad243ef326047bbdd1672af6ae3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "tenant_schema"
                                ],
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Marketing item deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing item deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Marketing item not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Marketing item not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/get_form": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve form details by name",
                "operationId": "b4ec65bb2fcb24f24177916ccb763f59",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id",
                                    "tenant_schema",
                                    "form_name"
                                ],
                                "properties": {
                                    "business_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "form_name": {
                                        "type": "string",
                                        "example": "Customer Feedback"
                                    },
                                    "sub_category_id": {
                                        "type": "integer",
                                        "example": 10,
                                        "nullable": true
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Form details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "form_name": {
                                            "type": "string",
                                            "example": "Customer Feedback"
                                        },
                                        "fields": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "label": {
                                                        "type": "string",
                                                        "example": "Customer Name"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "text"
                                                    },
                                                    "values": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "value": {
                                                                    "type": "string",
                                                                    "example": "john doe"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Form not found in the master database for the specified business."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while fetching the form data."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/saveNote": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Save a customer note",
                "operationId": "1970014b6a4a9f57a61370146bd2432a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "customer_id",
                                    "customer_no"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "customer_id": {
                                        "type": "string",
                                        "example": "CUST123"
                                    },
                                    "customer_no": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Customer prefers email communication.",
                                        "nullable": true
                                    },
                                    "tag_list": {
                                        "type": "string",
                                        "example": "vip, urgent",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Tenant not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while saving the note. Please try again."
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "SQLSTATE[...]: Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getNotes": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve notes for a customer",
                "operationId": "f7e1ac811d87c00c4602ae090e985c64",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_abc"
                    },
                    {
                        "name": "customer_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "CUST123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of customer notes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "notes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "customer_id": {
                                                        "type": "string",
                                                        "example": "CUST123"
                                                    },
                                                    "note": {
                                                        "type": "string",
                                                        "example": "Customer prefers email communication."
                                                    },
                                                    "customer_no": {
                                                        "type": "string",
                                                        "example": "9876543210"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No notes found or tenant does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Tenant not found."
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No notes found for this customer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving notes. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/editNote": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit an existing customer note",
                "operationId": "593924908a503a1fbf608e7ed11df672",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "note_id"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "note_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "note": {
                                        "type": "string",
                                        "example": "Updated note content."
                                    },
                                    "tag_list": {
                                        "type": "string",
                                        "example": "important, follow-up"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Note updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No data to update",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Nothing to update."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No matching note found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No matching note found to update."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while updating the note. Please try again."
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "Exception message here"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deleteNote": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Soft delete a customer note",
                "operationId": "e9fc040076b2c8d9fe332a19f5f735ee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "note_id"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "note_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Note deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Note deleted successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while deleting the note. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/saveBusinessHistory": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Save business history and dynamically create/update tables",
                "operationId": "42ec6598af7e549273334cf599369724",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "form_name"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "form_name": {
                                        "type": "string",
                                        "example": "business_form"
                                    },
                                    "current_status": {
                                        "type": "string",
                                        "example": "Schedule"
                                    },
                                    "schedule_on": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-10"
                                    },
                                    "customer_no": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Status saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Status saved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: Table already exists."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getBusinessHistory": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve business history and related data",
                "operationId": "be2086d5f5051810697be544a34597ca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "customer_id",
                                    "customer_no",
                                    "business_id"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_abc"
                                    },
                                    "customer_id": {
                                        "type": "string",
                                        "example": "101"
                                    },
                                    "customer_no": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "business_id": {
                                        "type": "string",
                                        "example": "B12345"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Business history and related data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Business history and related data retrieved successfully."
                                        },
                                        "notes": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "customer_id": {
                                                        "type": "string",
                                                        "example": "101"
                                                    },
                                                    "note": {
                                                        "type": "string",
                                                        "example": "Follow-up scheduled."
                                                    },
                                                    "tag_list": {
                                                        "type": "string",
                                                        "example": "Follow-up, Important"
                                                    },
                                                    "customer_no": {
                                                        "type": "string",
                                                        "example": "9876543210"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-05 10:30:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "business_history": {
                                            "properties": {
                                                "current_status": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "current_status": {
                                                            "type": "string",
                                                            "example": "Scheduled"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-04-01 15:00:00"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "previous_status": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "current_status": {
                                                            "type": "string",
                                                            "example": "Pending"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-03-30 14:00:00"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "customer": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "purchased_items_services": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "visited_for": {
                                                        "type": "string",
                                                        "example": "Product A"
                                                    },
                                                    "current_status": {
                                                        "type": "string",
                                                        "example": "Service/ProductPurchased"
                                                    },
                                                    "purchased_on": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-03-28"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-28 16:00:00"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "item"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: Table does not exist."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/getBusinessHistoryList": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve business history list",
                "operationId": "ec23b84c3c4697e54edc9cc4b75d9691",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "description": "Schema name of the tenant",
                                        "type": "string",
                                        "example": "testing_tenant"
                                    },
                                    "is_filter": {
                                        "description": "Optional: 1 to filter employee-specific contacts, 0 otherwise",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "emp_id": {
                                        "description": "Optional: Employee ID when filtering employee-specific data, else 0",
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "from_date": {
                                        "description": "Start date for filtering business history",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-05"
                                    },
                                    "to_date": {
                                        "description": "End date for filtering business history",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-04-05"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful retrieval of business history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Data retrieved successfully."
                                        },
                                        "business_history": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "group_name": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "customer_id": {
                                                                    "type": "integer",
                                                                    "example": 123
                                                                },
                                                                "mobile": {
                                                                    "type": "string",
                                                                    "example": "9876543210"
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "John Doe"
                                                                },
                                                                "profile_pic": {
                                                                    "type": "string",
                                                                    "example": "profile.jpg"
                                                                },
                                                                "current_status": {
                                                                    "type": "string",
                                                                    "example": "Active"
                                                                },
                                                                "last_visit": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "example": "2024-01-15"
                                                                },
                                                                "last_connected": {
                                                                    "type": "string",
                                                                    "format": "datetime",
                                                                    "example": "2024-01-20 10:30:00"
                                                                },
                                                                "follow_up_time": {
                                                                    "type": "integer",
                                                                    "example": 12
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/getPurchasedItems": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve purchased items for a customer",
                "description": "Fetches all purchased items for a given customer based on their purchase history.",
                "operationId": "e0ccfeafc00084e41fcb10dbe06d9d99",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id",
                                    "tenant_schema",
                                    "customer_id"
                                ],
                                "properties": {
                                    "business_id": {
                                        "description": "Business ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenant_schema": {
                                        "description": "Tenant database schema",
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchased items retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchased items retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "visited_for": {
                                                        "type": "string",
                                                        "example": "Product A"
                                                    },
                                                    "current_status": {
                                                        "type": "string",
                                                        "example": "Service/ProductPurchased"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-07T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Business ID, Tenant Schema, and Customer Number are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No purchased items found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No purchased items found for the given customer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving purchased items."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getPurchasedServices": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve purchased services for a customer",
                "description": "Fetches all purchased services for a given customer based on their purchase history.",
                "operationId": "b92307277720c685b9ee7129ac6bf007",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "business_id",
                                    "tenant_schema",
                                    "customer_id"
                                ],
                                "properties": {
                                    "business_id": {
                                        "description": "Business ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tenant_schema": {
                                        "description": "Tenant database schema",
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "customer_id": {
                                        "description": "Customer ID",
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Purchased services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Purchased services retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "visited_for": {
                                                        "type": "string",
                                                        "example": "Service A"
                                                    },
                                                    "current_status": {
                                                        "type": "string",
                                                        "example": "Service/ProductPurchased"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-07T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Business ID, Tenant Schema, and Customer Number are required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No purchased services found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No purchased service found for the given customer."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving purchased services."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getDashboardData": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get dashboard data for a specific tenant",
                "description": "Fetches various metrics related to contacts, customers, opportunities, schedules, follow-ups, and statuses for a given tenant.",
                "operationId": "c80fa5d1cf063093c3a61fbf32292db9",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "description": "Tenant database schema name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tenant_db"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "dashboard_data": {
                                            "properties": {
                                                "profile_completed": {
                                                    "type": "integer",
                                                    "example": 80
                                                },
                                                "total_contacts": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "total_customers": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "total_opportunities": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total_schedules": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_follow_up": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "follow_up_done": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "total_pending_status": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "total_status_done": {
                                                    "type": "integer",
                                                    "example": 6
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getCustomerProfileCompletion": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get customer profile completion percentage",
                "description": "Calculates the profile completion percentage based on non-empty fields for a given customer.",
                "operationId": "111ed4fe084343bb6e2e6ba7cc764d48",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "description": "Tenant database schema name",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tenant_db"
                        }
                    },
                    {
                        "name": "customer_no",
                        "in": "query",
                        "description": "Customer mobile number",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "9876543210"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile completion percentage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profile_completed": {
                                            "type": "integer",
                                            "example": 80
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer not found."
                                        },
                                        "profile_completed": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/addTask": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add a new task",
                "description": "Dynamically creates the 'tasks' table if not exists, adds necessary columns, and inserts task data.",
                "operationId": "d4401c0e04ea8dd7052cd659d74195b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "form_data"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "form_data": {
                                        "type": "object",
                                        "example": {
                                            "title": "New Task",
                                            "description": "Task details",
                                            "priority": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task added successfully"
                                        },
                                        "task_id": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/editTask": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit an existing task",
                "description": "Updates an existing task by dynamically adding new columns if necessary.",
                "operationId": "3487da7370e3d95a4f15c23307cf6c42",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "task_id",
                                    "form_data"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "task_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "form_data": {
                                        "type": "object",
                                        "example": {
                                            "title": "Updated Task",
                                            "description": "Updated details"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getTask": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve tasks",
                "description": "Fetches tasks from the tenant schema, applying optional filters.",
                "operationId": "868e2bf3a7900f68e8f79edbf486272b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "filters": {
                                        "description": "Optional filters to retrieve specific tasks",
                                        "type": "object",
                                        "example": {
                                            "status": 1,
                                            "priority": "high"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tasks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "tasks": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tasks table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks table does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/markTaskDone": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Mark a task as completed",
                "description": "Updates the status of a task to mark it as done.",
                "operationId": "3c3d9ec864898f545768d9d5eb8d276c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "task_id"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "task_id": {
                                        "type": "integer",
                                        "example": 123
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task marked as completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Task completed successfully"
                                        },
                                        "task_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Task not found or table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Task not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deleteTask": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Delete tasks",
                "description": "Marks tasks as deleted by updating the is_deleted flag.",
                "operationId": "aa499ac02b9a9b6d3fc578ac396d5691",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "task_ids"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "task_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tasks deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tasks deleted successfully"
                                        },
                                        "task_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No matching tasks found or table does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No matching tasks found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/createInvoiceOrProposal": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Create an invoice or proposal",
                "description": "Creates an invoice or proposal along with bill items and tax details.",
                "operationId": "71da7c4d479fb0bb1f1ed516a66dd4f9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "type",
                                    "bill_items",
                                    "tax_details"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "invoice",
                                            "proposal"
                                        ],
                                        "example": "invoice"
                                    },
                                    "bill_items": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "example": {
                                                "item_name": "Product A",
                                                "price": 100,
                                                "quantity": 2
                                            }
                                        }
                                    },
                                    "tax_details": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "example": {
                                                "tax_type": "GST",
                                                "rate": 18
                                            }
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bill/Proposal created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bill/Proposal created successfully."
                                        },
                                        "uid": {
                                            "type": "string",
                                            "example": "TIDABC123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create Bill/Proposal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create Bill/Proposal."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getAllInvoiceOrProposals": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get all invoices or proposals",
                "description": "Fetches all invoices or proposals with optional filtering by type and date.",
                "operationId": "fa0a8cf3267aced9461640170c0bf1f0",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_db"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "invoice",
                                "proposal"
                            ]
                        },
                        "example": "invoice"
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        },
                        "example": "2024-04-07"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bills and Proposals fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bills and Proposals fetched successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "TIDABC123"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "invoice"
                                                    },
                                                    "billing_details": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "uid": {
                                                                    "type": "string",
                                                                    "example": "TIDABC123"
                                                                },
                                                                "customer_name": {
                                                                    "type": "string",
                                                                    "example": "John Doe"
                                                                },
                                                                "customer_no": {
                                                                    "type": "string",
                                                                    "example": "9876543210"
                                                                },
                                                                "total_item": {
                                                                    "type": "string",
                                                                    "example": "3"
                                                                },
                                                                "total_quantity": {
                                                                    "type": "string",
                                                                    "example": "10"
                                                                },
                                                                "total_amount": {
                                                                    "type": "string",
                                                                    "example": "1500.00"
                                                                },
                                                                "date": {
                                                                    "type": "string",
                                                                    "format": "date",
                                                                    "example": "2024-04-07"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "tax_details": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "example": {
                                                                "tax_type": "GST",
                                                                "rate": 18
                                                            }
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve data."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getInvoiceAndProposal": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get invoice or proposal by UID",
                "description": "Fetches a specific invoice or proposal based on the provided UID.",
                "operationId": "6a95cb10ce3703c04e8c9b1b3f89491d",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_db"
                    },
                    {
                        "name": "uid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "TIDABC123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice or Proposal fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice or Proposal fetched successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "uid": {
                                                        "type": "string",
                                                        "example": "TIDABC123"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "invoice"
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2024-04-07"
                                                    },
                                                    "billing_details": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "example": {
                                                                "item_name": "Product A",
                                                                "quantity": 5,
                                                                "price": 500
                                                            }
                                                        }
                                                    },
                                                    "tax_details": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "example": {
                                                                "tax_type": "GST",
                                                                "rate": 18
                                                            }
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No invoice or proposal found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No invoice or proposal found for the provided UID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve invoice or proposal",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve invoice or proposal."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/assignGroupToCustomers": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Assign a group to multiple customers",
                "description": "Assigns a specified group to a list of customer IDs.",
                "operationId": "b26ddd7650a7102103ce038d8e2c6e0a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "group",
                                    "customer_ids"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": "Premium"
                                    },
                                    "customer_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group assigned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group assigned successfully."
                                        },
                                        "group": {
                                            "type": "string",
                                            "example": "Premium"
                                        },
                                        "customer_ids": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to assign group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to assign group."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/addAccountDetails": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add account details for a tenant",
                "description": "Adds UPI account details to the tenant's database. If a UPI already exists, it prevents duplicate entries.",
                "operationId": "09bfa20145a8e897b249cd0876c79a38",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "form_data"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "form_data": {
                                        "required": [
                                            "upi_name",
                                            "upi_id"
                                        ],
                                        "properties": {
                                            "upi_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "upi_id": {
                                                "type": "string",
                                                "example": "johndoe@upi"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "UPI added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UPI added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "UPI is already added",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UPI is already added, edit existing UPI to add new."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/editAccountDetail": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Edit UPI account details",
                "description": "Updates an existing UPI account detail in the tenant's database.",
                "operationId": "356379849a23827a23c1192c6f28a07a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "id",
                                    "form_data"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "form_data": {
                                        "required": [
                                            "upi_name",
                                            "upi_id"
                                        ],
                                        "properties": {
                                            "upi_name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "upi_id": {
                                                "type": "string",
                                                "example": "johndoe@upi"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "UPI details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "UPI details updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getAccountDetails": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Fetch UPI account details",
                "description": "Retrieves account details from the tenant's database.",
                "operationId": "7a7864198d94d152e9bf7894cac45e2a",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_db"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "account_details": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "upi_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "upi_id": {
                                                        "type": "string",
                                                        "example": "johndoe@upi"
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_deleted": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-04-07T12:34:56Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2024-04-07T12:34:56Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account details not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Account details not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getProductsAndServices": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Fetch active products and services",
                "description": "Retrieves active products and services from the tenant's database.",
                "operationId": "cee34ded4b6c88c9e351a873f9bc2190",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "tenant_db"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products and services retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data retrieved successfully"
                                        },
                                        "products": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Product A"
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_deleted": {
                                                        "type": "integer",
                                                        "example": 0
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Service A"
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_deleted": {
                                                        "type": "integer",
                                                        "example": 0
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/addContact": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Add a new contact",
                "description": "Adds a new contact to the customers table under the tenant schema.",
                "operationId": "869de906a94bbd634303fea6d2e9caef",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "name",
                                    "mobile"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "profile_pic": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": null
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Contact added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/createQuickBilling": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Create a quick billing entry",
                "description": "Creates a new quick billing entry under the tenant schema.",
                "operationId": "8ae130ed0744bbfd49d3e578992e6fc4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "customer_id",
                                    "phone",
                                    "amount"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "9876543210"
                                    },
                                    "amount": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500.75
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quick billing entry created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Quick billing entry created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "tid": {
                                                    "type": "string",
                                                    "example": "TID1234567"
                                                },
                                                "customer_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "9876543210"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 500.75
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-07T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-04-07T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/getAllQuickBilling": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Get all quick billing entries",
                "description": "Retrieves all quick billing entries for the given tenant schema.",
                "operationId": "ada9347c2953ebc5daa0fa4332c35fb8",
                "parameters": [
                    {
                        "name": "tenant_schema",
                        "in": "query",
                        "description": "Tenant schema to fetch billing data from",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "tenant_db"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of quick billing entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "tid": {
                                                        "type": "string",
                                                        "example": "TID1234567"
                                                    },
                                                    "customer_id": {
                                                        "type": "integer",
                                                        "example": 123
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "9876543210"
                                                    },
                                                    "amount": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 500.75
                                                    },
                                                    "status": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "is_deleted": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "customer_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-07T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-07T12:00:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/importCatalogXlsx": {
            "post": {
                "tags": [
                    "Web App"
                ],
                "summary": "Import catalog from an Excel file",
                "description": "Uploads an Excel (XLSX/CSV) file to import product or service catalog data.",
                "operationId": "729fca9c1b4dc89ef4ffcf222ee60df6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "tenant_schema",
                                    "category_type",
                                    "file"
                                ],
                                "properties": {
                                    "tenant_schema": {
                                        "description": "Tenant schema name",
                                        "type": "string",
                                        "example": "tenant_db"
                                    },
                                    "category_type": {
                                        "description": "Catalog type",
                                        "type": "string",
                                        "enum": [
                                            "product",
                                            "service"
                                        ],
                                        "example": "product"
                                    },
                                    "file": {
                                        "description": "Excel file (.xlsx or .csv) containing catalog data",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catalog uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog uploaded successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or file errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid product catalog file."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error uploading catalog: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and sends an OTP for verification.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "device_id",
                                    "mobile"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "device_id": {
                                        "type": "string",
                                        "example": "abc123xyz"
                                    },
                                    "mobile": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "refferal_code": {
                                        "type": "string",
                                        "example": "REF123",
                                        "nullable": true
                                    },
                                    "fcm_token": {
                                        "type": "string",
                                        "maxLength": 255
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful. Please verify OTP.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please verify OTP."
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "tenant_schema": {
                                                    "type": "string",
                                                    "example": "tenant_1"
                                                },
                                                "mobile_verify": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation failed or mobile number already registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile number already registered."
                                        },
                                        "mobile_verify": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database creation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database creation failed: error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP",
                "description": "Verifies OTP for a tenant. If successful, it marks the mobile as verified and generates a JWT token.",
                "operationId": "f559cc712391abc094868d5720260922",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile",
                                    "otp"
                                ],
                                "properties": {
                                    "mobile": {
                                        "type": "string",
                                        "example": "+911234567890"
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "OTP VERIFIED",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "OTP VERIFIED"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "jwt_token_here"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "mobile": {
                                                    "type": "string",
                                                    "example": "+911234567890"
                                                },
                                                "user_type": {
                                                    "type": "string",
                                                    "example": "tenant"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid OTP",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid OTP"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tenant not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to generate token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to generate token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/send-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send OTP to registered mobile number",
                "operationId": "5853b23e5d75da092a6100b0520e4712",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile"
                                ],
                                "properties": {
                                    "mobile": {
                                        "description": "Registered mobile number",
                                        "type": "string",
                                        "example": "+911234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "otp": {
                                            "type": "string",
                                            "example": "1234"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mobile number not registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mobile number not registered"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/check-mobile": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check if mobile number is registered",
                "operationId": "009b03702e69e5512bf0f42d7ab8504a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile"
                                ],
                                "properties": {
                                    "mobile": {
                                        "description": "Mobile number to check",
                                        "type": "string",
                                        "example": "+911234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mobile number is registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile number is registered"
                                        },
                                        "mobile_verify": {
                                            "description": "Mobile verification status",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "is_employee": {
                                            "description": "Whether the user is an employee (1 = Yes, 0 = No)",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "password": {
                                            "description": "Whether the user has set a password (1 = Yes, 0 = No)",
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mobile number not registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile number not registered"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login with mobile and password",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile",
                                    "password"
                                ],
                                "properties": {
                                    "mobile": {
                                        "description": "User's registered mobile number",
                                        "type": "string",
                                        "example": "+911234567890"
                                    },
                                    "password": {
                                        "description": "User's login password",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1N..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        },
                                        "mobile_verify": {
                                            "description": "Mobile verification status",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "user_type": {
                                            "description": "User type",
                                            "type": "string",
                                            "example": "Operational user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Incorrect password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Incorrect PIN"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "OTP not verified or password not set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP not verified. Please verify your mobile number."
                                        },
                                        "mobile_verify": {
                                            "type": "integer",
                                            "example": 0
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Mobile number not registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mobile number not registered"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Token generation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Could not generate token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user details",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "Authenticated user details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "john@example.com"
                                        },
                                        "mobile": {
                                            "type": "string",
                                            "example": "+911234567890"
                                        },
                                        "business_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "business_name": {
                                            "type": "string",
                                            "example": "Retail Store"
                                        },
                                        "sub_category_id": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "sub_category_name": {
                                            "type": "string",
                                            "example": "Grocery"
                                        },
                                        "user_type": {
                                            "type": "string",
                                            "example": "Operational user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "operationId": "2c27d311a2876560fcb5a754b556cdc5",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "newly_generated_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Tenants",
            "description": "API Endpoints for Tenants"
        },
        {
            "name": "Web App",
            "description": "Web App"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        }
    ]
}